name: Wheels

on:
  workflow_dispatch:
  release:
    types:
      - published

jobs:
  build_wheels:
    name: Wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-13, macos-latest, windows-latest] # macos-latest is arm64 and macos-13 is intel, we need both. See https://github.com/actions/runner-images?tab=readme-ov-file#available-images

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true

    - name: Build TittaPy (cibuildwheel)
      uses: pypa/cibuildwheel@v3.1.3
      with:
        package-dir: SDK_wrapper
      env:
        CIBW_BUILD: cp*-manylinux_x86_64 cp*-macosx_x86_64 cp*-macosx_arm64 cp*-win_amd64
        CIBW_SKIP: cp39-* cp*t-* # skip all 3.9 wheels, and all free-threaded builds, as i have not tested these. We keep 3.8 for as still used for some PsychoPy installations

        CIBW_BEFORE_BUILD_WINDOWS: "pip install delvewheel"
        CIBW_REPAIR_WHEEL_COMMAND_WINDOWS: "delvewheel repair -w {dest_dir} --add-path .\\SDK_wrapper\\TittaMex\\64\\Windows {wheel}"

        CIBW_BEFORE_ALL_LINUX: dnf install -y avahi-libs && cp ./SDK_wrapper/TittaMex/64/Linux/libtobii_research.so.1 /usr/lib && cp ./SDK_wrapper/TittaMex/64/Linux/libtobii_research.so.2 /usr/lib && ldconfig -n -v /usr/lib
        CIBW_MANYLINUX_X86_64_IMAGE: quay.io/pypa/manylinux_2_34_x86_64
        CIBW_BEFORE_BUILD_LINUX: "pip install auditwheel-symbols"
        CIBW_REPAIR_WHEEL_COMMAND_LINUX: "auditwheel-symbols --manylinux 2_34 {wheel}; echo '---'; auditwheel show {wheel}; echo '---'; auditwheel repair -w {dest_dir} {wheel}"

        CIBW_BEFORE_BUILD_MACOS: uname -a
        MACOSX_DEPLOYMENT_TARGET: 14

    - name: Build TittaLSLPy (cibuildwheel)
      uses: pypa/cibuildwheel@v3.1.3
      with:
        package-dir: LSL_streamer
      env:
        CIBW_BUILD: cp*-manylinux_x86_64 cp*-macosx_x86_64 cp*-macosx_arm64 cp*-win_amd64
        CIBW_SKIP: cp39-* cp*t-* # skip all 3.9 wheels, and all free-threaded builds, as i have not tested these. We keep 3.8 for as still used for some PsychoPy installations

        CIBW_BEFORE_BUILD_WINDOWS: "pip install delvewheel"
        CIBW_REPAIR_WHEEL_COMMAND_WINDOWS: "delvewheel repair -w {dest_dir} --add-path .\\SDK_wrapper\\TittaMex\\64\\Windows;.\\LSL_streamer\\TittaLSLMex\\+TittaLSL\\+detail {wheel}"

        CIBW_BEFORE_ALL_LINUX: dnf install -y avahi-libs && cp ./LSL_streamer/TittaLSLMex/+TittaLSL/+detail/libtobii_research.so.1 /usr/lib && cp ./LSL_streamer/TittaLSLMex/+TittaLSL/+detail/libtobii_research.so.2 /usr/lib && cp ./LSL_streamer/TittaLSLMex/+TittaLSL/+detail/liblsl.so /usr/lib && ldconfig -n -v /usr/lib
        CIBW_MANYLINUX_X86_64_IMAGE: quay.io/pypa/manylinux_2_34_x86_64
        CIBW_BEFORE_BUILD_LINUX: "pip install auditwheel-symbols"
        CIBW_REPAIR_WHEEL_COMMAND_LINUX: "auditwheel-symbols --manylinux 2_34 {wheel}; echo '---'; auditwheel show {wheel}; echo '---'; auditwheel repair -w {dest_dir} {wheel}"

        CIBW_BEFORE_BUILD_MACOS: uname -a
        MACOSX_DEPLOYMENT_TARGET: 14

    - name: Verify clean directory
      run: git diff --exit-code
      shell: bash

    - name: Upload wheels
      uses: actions/upload-artifact@v4
      with:
        name: dist-${{ matrix.os }}
        path: wheelhouse/*.whl


  upload_all:
    name: Upload if release
    needs: [build_wheels]
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && github.event.action == 'published'

    steps:
    - uses: actions/download-artifact@v4
      with:
        pattern: dist-*
        merge-multiple: true
        path: dist

    - uses: pypa/gh-action-pypi-publish@v1.12.4
      with:
        user: __token__
        password: ${{ secrets.pypi_password }}
